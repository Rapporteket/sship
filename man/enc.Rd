% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enc.R
\name{enc}
\alias{enc}
\alias{enc_filename}
\alias{random_key}
\alias{make_pubkey_url}
\alias{get_pubkey}
\alias{enc_file}
\title{Encryption of shipment content}
\usage{
enc_filename(filename)

random_key(bytes = 32)

make_pubkey_url(pubkey_holder = "github", pid)

get_pubkey(pubkey_holder, pid)

enc_file(filename, pubkey_holder, pid)
}
\arguments{
\item{filename}{string with full y qualified path to a file}

\item{pubkey_holder}{string defining the provider of the public key used for
encryption of the symmetric key. Currently, 'github' is the only valid
option.}

\item{pid}{string uniquely defining the user at 'pubkey_holder' who is also
the owner of the  public key}
}
\value{
mosty exit satus?
}
\description{
Various function and helper functions to establish encrypted files.
}
\details{
Encrypted files can be decrypted outside R using the OpenSSL library.
Below, a bash shell (unix) example is given.
Step 1: decrypt summetric key (open envelope)
\preformatted{
openssl rsautl -decrypt -inkey ~/.ssh/id_rsa -in tempkey.enc -out tempkey
}
Step 2: decrypt content by key obtained in the above step
\preformatted{
openssl aes-256-cbc -d -in test.txt.enc -out msg \
-K $(hexdump -e '32/1 "\%02x"' tempkey) -iv $(hexdump -e '16/1 "\%02x"' iv)
}
}
